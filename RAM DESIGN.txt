library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;  -- Use numeric_std instead of std_logic_unsigned

entity RAM is
    Port (
        clk   : in  std_logic;                      -- Clock signal
        we    : in  std_logic;                      -- Write Enable
        addr  : in  std_logic_vector(3 downto 0);   -- 4-bit Address (16 locations)
        din   : in  std_logic_vector(7 downto 0);   -- Data input (8-bit)
        dout  : out std_logic_vector(7 downto 0)    -- Data output (8-bit)
    );
end RAM;

architecture Behavioral of RAM is
    type ram_type is array (0 to 15) of std_logic_vector(7 downto 0);
    signal ram : ram_type := (others => (others => '0'));
begin
    process(clk)
    begin
        if rising_edge(clk) then
            if we = '1' then
                ram(to_integer(unsigned(addr))) <= din;  -- Write operation
            end if;
        end if;
    end process;

    -- Asynchronous Read
    dout <= ram(to_integer(unsigned(addr)));

end Behavioral;


